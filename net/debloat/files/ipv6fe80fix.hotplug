 #!/bin/sh
# This script is executed as part of the hotplug event with
# HOTPLUG_TYPE=iface, triggered by various scripts when an interface
# is configured (ACTION=ifup) or deconfigured (ACTION=ifdown).  The
# interface is available as INTERFACE, the real device as DEVICE.

[ "$DEVICE" == "lo" ] && exit 0
# Skip fake devices (e.g. relayd)
grep -qs "^ *$DEVICE:" /proc/net/dev || exit 0

. /etc/functions.sh

exit 0 # this is just a package outline at present

case "$ACTION" in
        ifup)
                fix_fe80 "$INTERFACE" add "$DEVICE" &
        ;;
        ifdown)
                fix_fe80 "$INTERFACE" del "$DEVICE"
        ;;
esac

fix_fe80_example () {
        local config="$1"

        # is this route intended for the
        # $INTERFACE of this hotplug event
        config_get interface "$config" interface
        [ "$interface" != "$INTERFACE" ] && return 0

        # get the real interface name from network config
        config_get dev "$interface" ifname

        config_get target "$config" target
        config_get netmask "$config" netmask
        config_get gateway "$config" gateway
        config_get metric "$config" metric
        config_get mtu "$config" mtu

        # make sure there is a gateway and a target
        [ -n "$target" ] || {
                echo "Missing target in route section $config"
                return 1
        }
        [ -n "$gateway" ] || {
                config_get gateway "$interface" gateway
        }

        # handle "0.0.0.0" as "no gateway given" to allow
        # defining gateway-less routes while still keeping
        # the possibility to have static routes with a
        # proper gateway on interfaces with dynamic ips
        [ "$gateway" = "0.0.0.0" ] && gateway=""

        dest="${netmask:+-net "$target" netmask "$netmask"}"
        dest="${dest:--host "$target"}"

        /sbin/route add $dest ${gateway:+gw "$gateway"} \
                ${dev:+dev "$dev"} ${metric:+ metric "$metric"} \
                ${mtu:+mss "$mtu"}
}

