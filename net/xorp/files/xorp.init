#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2010 OpenWrt.org

NAME=xorp
PROG=/usr/sbin/xorp_rtrmgr
START=50
STOP=50

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/lib/xorp/bin:/usr/lib/xorp/sbin
export LD_LIBRARY_PATH=/usr/lib/xorp/lib
DAEMON=/usr/sbin/xorp_rtrmgr

NAME=xorp
PIDFILE=/var/run/$NAME.pid 
DESC="eXtensible Open Router Platform"

test -x $DAEMON || exit 0
test -x $DAEMON_WRAPPER || exit 0

LOGFILE=/dev/null
# maximum sleeping time when waiting for the daemon to die,
# don't set it too low or you might not let xorp die gracefully
DAEMON_OPTS="-d -l $LOGFILE -P $PIDFILE -b /etc/xorp/config.boot"

if ! [ -f /etc/xorp/config.boot ] ; then
    echo "XORP disabled, please adjust the configuration at /etc/xorp/config.boot "
    exit 0
fi

set -e

running_pid() {
# Check if a given process pid's cmdline matches a given name
    pid=$1
    name=$2
    [ -z "$pid" ] && return 1 
    [ ! -d /proc/$pid ] &&  return 1
    cmd=`cat /proc/$pid/cmdline | tr "\000" "\n"|head -n 1 |cut -d : -f 1`
    # Is this the expected child?
    [ "$cmd" != "$name" ] &&  return 1
    return 0
}

running_proc() {
# Check if the process is running looking at /proc
# (works for all users)

    # No pidfile, probably no daemon present
    [ ! -f "$PIDFILE" ] && return 1
    pid=`cat $PIDFILE`

    running_pid $pid $DAEMON || return 1

    return 0
}

running() {
# Check if the process is running
# Use one function or other depending if we are root or not
    running_proc
    return $?
}

start_xorp() {
        $DAEMON $DAEMON_OPTS
        errcode=$?
	return $errcode
}

stop_xorp() {
# Stop the process using the wrapper
        kill $(cat $PIDFILE)
        errcode=$?
	return $errcode
}


start() {
        if running ;  then
            echo "apparently already running"
            exit 0
        fi
        if start_xorp && running ;  then
            exit 0
        else
            echo "Error starting XORP!"
            exit 1
        fi
}

stop() {
        if running ; then
            stop_xorp
        else
            echo "apparently not running"
            exit 0
        fi
}


